i am happy to see all of you working together on this one. even though there are some minor differences on your codes i think it should all syncronize in the end. and i think this is also a good opportunity to start working with a single git project. i recommend that you create a single repo where all 3 of you are collaborators, then each person can create their own branch, and as you develop your code you merge your branches into the main branch.
i don't know where you guys got the maze generation algorithm, but i see some serious flaws with this code. for once a maze should have a single interior. if any part of the maze is completely boxed off, then that maze is considered broken. as a matter of fact i had to figure out how to generate mazes recently too! and after doing some research i went with Randomized Prim's Algorithm from this video
https://www.youtube.com/watch?v=sVcB8vUFlmU
i recommend watching all the algorithms in this video, and picking one that you think will be the easiest to implement.
after that select a start/end position on the outermost layer of the maze. i am not sure how you are picking the start position of the ball, but sometimes it starts in the walls, and the ball can never be moved.
another thing that bothered me a bit was how you are handling key events. the hardcoded keycodes are very difficult to understand. it's best to convert them into human readable key names like 'w', 'a', 'ArrowLeft'. and please and please do not event.preventDefault() on keypresses you aren't even handling here. it prevents me from hitting Ctrl+R to refresh the page, or press F12 to open developer tools. why suppress all user input when it is not even relevant to your code.
lastly i want to talk a little about the collision detection. now, i am aware the this is not an easy task and even experienced game developers disagree with each other on how to handle certain situations. however, in your code you have a ball, but you are handling it like a rectangle. a ball is clearly a circle. so let's see if you can improve this code a bit. also when the ball is against the wall and the player is trying to move diagonally, the ball should still move. e.g. if there is a wall on the left but i am pressing left and up at the same time, the ball should move up. this video will give you some tips as to how to handle these cases but please don't watch the whole thing. it's mainly a unity tutorial but the concepts are the same. 
https://youtu.be/AmGSEH7QcDg?t=7913
so have fun working on this, and ask me questions whenever you want. it's fun figuring things out on your own, but sometimes it's a lot faster to ask for help.